trigger:
  branches:
    include: 
    - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  subscription: 'ADOSC'
  rgname: 'newtest'
  app.name: 'myappxd21'
  appservice.plan: 'myappserviceplanw231'
  mysql.db.name: springdb
  mysql.db.server: mysqlv3221
  mysql.db.username: 'root'
  location: 'west us'
  acr.name: 'ananapi'
  registry.username: 'ananapi'
  regconnect: 'test'

stages:

# Build Stage
- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'Ubuntu-latest'
    steps:

# # Create MySQL Database
#     - task: AzureResourceGroupDeployment@2
#       displayName: 'Azure Deployment:Create MySql Database'
#       inputs:
#         azureSubscription: '$(subscription)'
#         resourceGroupName: '$(rgName)'
#         location: $(location)
#         csmFile: '$(System.DefaultWorkingDirectory)/**/database-webapp-template.json'
        
#Login to ACR
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: test

#Build java Artifact
    - task: Maven@3
      inputs:
        mavenPomFile: 'react-and-spring-data-rest/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package -Dmaven.test.skip=true'

# Build and push image to ACR
    - task: Docker@2
      displayName: Build and Push
      inputs:
        command: buildAndPush
        repository: cape-demo
        tags: latest


- stage: Deployment 
  jobs:
  - job: DeployService
    displayName: 'Update webapp'
    steps:
      - checkout: none
      - task: AzureCLI@2
        displayName: 'Deploy Service'
        inputs:
          azureSubscription: $(subscription)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az group create -n $(rgname) -l $(location)
            az webapp create -g $(rgname) -p $(appservice.plan) -n $(app.name) -i ananapi.azurecr.io/cape-demo:latest 
            az webapp config appsettings set -g $(rgname) -n $(app.name) --settings WEBSITES_PORT=8080
            az webapp start -g $(rgname) -n $(app.name)
            

# #Destroy Function
# - stage: DestroyEnvironment
#   jobs:
#   - deployment: DestroyAll
#     environment: 'Destroy'
#     strategy:
#      runOnce:
#        deploy:
#          steps:
#           - task: AzureCLI@2
#             inputs:
#               azureSubscription: '$(subscription)'
#               scriptType: 'pscore'
#               scriptLocation: 'inlineScript'
#               inlineScript: 'az group delete --name $(rgName) --yes'
#               powerShellErrorActionPreference: 'silentlyContinue'
         