# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
  branches:
    include: 
    - main

variables:
  buildConfiguration: 'Release'
  location: 'West US 2'
  acrHostName: 'capehakeemww0azacr.azurecr.io'
  acrName: 'capehakeemww0azacr'
  rgName: 'cape-rg'
  imageName: 'capehakeewmdocker'
  webAppName: 'capedocker'
  subscription: 'CAPESPN'
stages:

# Build Stage
- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'Ubuntu-latest'
    steps:
    # Create or update the ACR resource
    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Azure Container Registry'
      inputs:
        azureSubscription: '$(subscription)'
        resourceGroupName: '$(rgName)'
        location: $(location)
        csmFile: '$(System.DefaultWorkingDirectory)/**/containerRegistry-template.json'
        overrideParameters: '-registryName "$(acrName)" -registryLocation "$(location)" -registrySku standard'
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
      mavenPomFile: 'react-and-spring-data-rest/pom.xml/pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: '**/react-and-spring-data-rest-*.jar'
      TargetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
    
   
    # - task: Maven@3
    #   inputs:
    #     mavenPomFile: 'react-and-spring-data-rest/pom.xml'
    #     mavenOptions: '-Xmx3072m'
    #     javaHomeOption: 'JDKVersion'
    #     jdkVersionOption: '1.8'
    #     jdkArchitectureOption: 'x64'
    #     publishJUnitResults: true
    #     testResultsFiles: '**/surefire-reports/TEST-*.xml'
    #     goals: 'package'
        
    
 
    # Build container image
    - task: Docker@1
      displayName: 'Build container image'
      inputs:
        azureSubscriptionEndpoint: '$(subscription)'
        azureContainerRegistry: '$(acrHostName)'
        imageName: '$(imageName):$(Build.BuildId)'
        useDefaultContext: false
        buildContext: '$(System.DefaultWorkingDirectory)/PublishedWebApp'

    # Push container image
    - task: Docker@1
      displayName: 'Push container image'
      inputs:
        azureSubscriptionEndpoint: '$(subscription)'
        azureContainerRegistry: '$(acrHostName)'
        command: 'Push an image'
        imageName: '$(imageName):$(Build.BuildId)'

    # Copy ARM templates
    - task: CopyFiles@2
      displayName: 'Copy ARM templates'
      inputs:
        SourceFolder: ArmTemplates
        TargetFolder: '$(build.artifactstagingdirectory)'

    # Publish the app as an artifact
    - publish: $(Build.StagingDirectory)
      artifact: app
    
    # - task: Docker@2
    #   displayName: Login to ACR
    #   inputs:
    #     command: login
    #     containerRegistry: '$(subscription)'

    # - task: Docker@2
    #   displayName: Build and Push
    #   inputs:
    #     command: buildAndPush
    #     repository: '($acrName)'
    #     tags: latest    